#   geom_point(data = dmean, aes(x = as.numeric(TestMoment), y = PSS, group = PMSScoreNew, fill = PMSScoreNew), position= position_dodge(0.2), shape = 21, size=4)+
# scale_x_discrete(labels=c('1'='control', '2'='premenstrual'))+
#   annotate('text', x=1, y=105, label='*', size=8)+
#   annotate('text', x=2, y=105, label='*', size=8)+
#   geom_segment(aes(x = 0.955, y = 103, xend = 1.055, yend = 103), size= 2)+
#   geom_segment(aes(x = 1.955, y = 103, xend = 2.055, yend = 103), size= 2)+
ggtitle('PSS ~ PMS * TestMoment')
p
dmean<-summarySE(dataBig2, measurevar="Arousal", groupvars=c('PMSScoreNew', 'Moment'))
p<- ggplot(dataBig2, aes(x=Moment, y=Arousal, fill=PMSScoreNew))+
geom_split_violin(adjust =1.5, alpha=.5, colour= NA)+
geom_boxplot(aes(x = Moment, y = Arousal, fill = PMSScoreNew), position= position_dodge(0.2),outlier.shape= NA, alpha = .5, width = .1, colour = "black")+
geom_point(data = dmean, aes(x = as.numeric(Moment), y = Arousal, group = PMSScoreNew, fill = PMSScoreNew), position= position_dodge(0.2), shape = 21, size=4)+
scale_x_discrete(labels=c('1'='control', '2'='premenstrual'))+
annotate('text', x=1, y=105, label='*', size=8)+
annotate('text', x=2, y=105, label='*', size=8)+
geom_segment(aes(x = 0.955, y = 103, xend = 1.055, yend = 103), size= 2)+
geom_segment(aes(x = 1.955, y = 103, xend = 2.055, yend = 103), size= 2)+
ggtitle('Arousal ~ PMS * TestMoment')
p
p<- ggplot(data, aes(x=Moment, y=PSS, fill=PMSScoreNew))+
geom_split_violin(adjust =1.5, alpha=.5)+
# geom_split_violin(adjust =1.5, alpha=.5, colour= NA)+
#   geom_boxplot(aes(x = TestMoment, y = PSS, fill = PMSScoreNew), position= position_dodge(0.2),outlier.shape= NA, alpha = .5, width = .1, colour = "black")+
#   geom_point(data = dmean, aes(x = as.numeric(TestMoment), y = PSS, group = PMSScoreNew, fill = PMSScoreNew), position= position_dodge(0.2), shape = 21, size=4)+
# scale_x_discrete(labels=c('1'='control', '2'='premenstrual'))+
#   annotate('text', x=1, y=105, label='*', size=8)+
#   annotate('text', x=2, y=105, label='*', size=8)+
#   geom_segment(aes(x = 0.955, y = 103, xend = 1.055, yend = 103), size= 2)+
#   geom_segment(aes(x = 1.955, y = 103, xend = 2.055, yend = 103), size= 2)+
ggtitle('PSS ~ PMS * TestMoment')
p
p<- ggplot(data, aes(x=Moment, y=PSS, fill=PMSScoreNew))+
geom_split_violin(adjust =1.5, alpha=.5)+
geom_split_violin(adjust =1.5, alpha=.5, colour= NA)+
#   geom_boxplot(aes(x = TestMoment, y = PSS, fill = PMSScoreNew), position= position_dodge(0.2),outlier.shape= NA, alpha = .5, width = .1, colour = "black")+
#   geom_point(data = dmean, aes(x = as.numeric(TestMoment), y = PSS, group = PMSScoreNew, fill = PMSScoreNew), position= position_dodge(0.2), shape = 21, size=4)+
# scale_x_discrete(labels=c('1'='control', '2'='premenstrual'))+
#   annotate('text', x=1, y=105, label='*', size=8)+
#   annotate('text', x=2, y=105, label='*', size=8)+
#   geom_segment(aes(x = 0.955, y = 103, xend = 1.055, yend = 103), size= 2)+
#   geom_segment(aes(x = 1.955, y = 103, xend = 2.055, yend = 103), size= 2)+
ggtitle('PSS ~ PMS * TestMoment')
p
p<- ggplot(data, aes(x=Moment, y=PSS, fill=PMSScoreNew))+
# geom_split_violin(adjust =1.5, alpha=.5)+
geom_split_violin(adjust =1.5, alpha=.5, colour= NA)+
#   geom_boxplot(aes(x = TestMoment, y = PSS, fill = PMSScoreNew), position= position_dodge(0.2),outlier.shape= NA, alpha = .5, width = .1, colour = "black")+
#   geom_point(data = dmean, aes(x = as.numeric(TestMoment), y = PSS, group = PMSScoreNew, fill = PMSScoreNew), position= position_dodge(0.2), shape = 21, size=4)+
# scale_x_discrete(labels=c('1'='control', '2'='premenstrual'))+
#   annotate('text', x=1, y=105, label='*', size=8)+
#   annotate('text', x=2, y=105, label='*', size=8)+
#   geom_segment(aes(x = 0.955, y = 103, xend = 1.055, yend = 103), size= 2)+
#   geom_segment(aes(x = 1.955, y = 103, xend = 2.055, yend = 103), size= 2)+
ggtitle('PSS ~ PMS * TestMoment')
p
p<- ggplot(data, aes(x=Moment, y=PSS, fill=PMSScoreNew))+
# geom_split_violin(adjust =1.5, alpha=.5)+
geom_split_violin(adjust =1.5, alpha=.5, colour= NA)+
geom_boxplot(aes(x = TestMoment, y = PSS, fill = PMSScoreNew), position= position_dodge(0.2),outlier.shape= NA, alpha = .5, width = .1, colour = "black")+
#   geom_point(data = dmean, aes(x = as.numeric(TestMoment), y = PSS, group = PMSScoreNew, fill = PMSScoreNew), position= position_dodge(0.2), shape = 21, size=4)+
# scale_x_discrete(labels=c('1'='control', '2'='premenstrual'))+
#   annotate('text', x=1, y=105, label='*', size=8)+
#   annotate('text', x=2, y=105, label='*', size=8)+
#   geom_segment(aes(x = 0.955, y = 103, xend = 1.055, yend = 103), size= 2)+
#   geom_segment(aes(x = 1.955, y = 103, xend = 2.055, yend = 103), size= 2)+
ggtitle('PSS ~ PMS * TestMoment')
p
p<- ggplot(data, aes(x=Moment, y=PSS, fill=PMSScoreNew))+
# geom_split_violin(adjust =1.5, alpha=.5)+
geom_split_violin(adjust =1.5, alpha=.5, colour= NA)+
geom_boxplot(aes(x = Moment, y = PSS, fill = PMSScoreNew), position= position_dodge(0.2),outlier.shape= NA, alpha = .5, width = .1, colour = "black")+
#   geom_point(data = dmean, aes(x = as.numeric(TestMoment), y = PSS, group = PMSScoreNew, fill = PMSScoreNew), position= position_dodge(0.2), shape = 21, size=4)+
# scale_x_discrete(labels=c('1'='control', '2'='premenstrual'))+
#   annotate('text', x=1, y=105, label='*', size=8)+
#   annotate('text', x=2, y=105, label='*', size=8)+
#   geom_segment(aes(x = 0.955, y = 103, xend = 1.055, yend = 103), size= 2)+
#   geom_segment(aes(x = 1.955, y = 103, xend = 2.055, yend = 103), size= 2)+
ggtitle('PSS ~ PMS * TestMoment')
p
p<- ggplot(data, aes(x=Moment, y=PSS, fill=PMSScoreNew))+
# geom_split_violin(adjust =1.5, alpha=.5)+
geom_split_violin(adjust =1.5, alpha=.5, colour= NA)+
geom_boxplot(aes(x = Moment, y = PSS, fill = PMSScoreNew), position= position_dodge(0.2),outlier.shape= NA, alpha = .5, width = .1, colour = "black")+
geom_point(data = dmean, aes(x = as.numeric(TestMoment), y = PSS, group = PMSScoreNew, fill = PMSScoreNew), position= position_dodge(0.2), shape = 21, size=4)+
# scale_x_discrete(labels=c('1'='control', '2'='premenstrual'))+
#   annotate('text', x=1, y=105, label='*', size=8)+
#   annotate('text', x=2, y=105, label='*', size=8)+
#   geom_segment(aes(x = 0.955, y = 103, xend = 1.055, yend = 103), size= 2)+
#   geom_segment(aes(x = 1.955, y = 103, xend = 2.055, yend = 103), size= 2)+
ggtitle('PSS ~ PMS * TestMoment')
p
p<- ggplot(data, aes(x=Moment, y=PSS, fill=PMSScoreNew))+
# geom_split_violin(adjust =1.5, alpha=.5)+
geom_split_violin(adjust =1.5, alpha=.5, colour= NA)+
geom_boxplot(aes(x = Moment, y = PSS, fill = PMSScoreNew), position= position_dodge(0.2),outlier.shape= NA, alpha = .5, width = .1, colour = "black")+
geom_point(data = dmean, aes(x = as.numeric(Moment), y = PSS, group = PMSScoreNew, fill = PMSScoreNew), position= position_dodge(0.2), shape = 21, size=4)+
# scale_x_discrete(labels=c('1'='control', '2'='premenstrual'))+
#   annotate('text', x=1, y=105, label='*', size=8)+
#   annotate('text', x=2, y=105, label='*', size=8)+
#   geom_segment(aes(x = 0.955, y = 103, xend = 1.055, yend = 103), size= 2)+
#   geom_segment(aes(x = 1.955, y = 103, xend = 2.055, yend = 103), size= 2)+
ggtitle('PSS ~ PMS * TestMoment')
p
dmean<-summarySE(data, measurevar="PSS", groupvars=c('PMSScoreNew', 'Moment'))
p<- ggplot(data, aes(x=Moment, y=PSS, fill=PMSScoreNew))+
# geom_split_violin(adjust =1.5, alpha=.5)+
geom_split_violin(adjust =1.5, alpha=.5, colour= NA)+
geom_boxplot(aes(x = Moment, y = PSS, fill = PMSScoreNew), position= position_dodge(0.2),outlier.shape= NA, alpha = .5, width = .1, colour = "black")+
geom_point(data = dmean, aes(x = as.numeric(Moment), y = PSS, group = PMSScoreNew, fill = PMSScoreNew), position= position_dodge(0.2), shape = 21, size=4)+
# scale_x_discrete(labels=c('1'='control', '2'='premenstrual'))+
#   annotate('text', x=1, y=105, label='*', size=8)+
#   annotate('text', x=2, y=105, label='*', size=8)+
#   geom_segment(aes(x = 0.955, y = 103, xend = 1.055, yend = 103), size= 2)+
#   geom_segment(aes(x = 1.955, y = 103, xend = 2.055, yend = 103), size= 2)+
ggtitle('PSS ~ PMS * TestMoment')
p
p<- ggplot(data, aes(x=Moment, y=PSS, fill=PMSScoreNew))+
# geom_split_violin(adjust =1.5, alpha=.5)+
geom_split_violin(adjust =1.5, alpha=.5, colour= NA)+
geom_boxplot(aes(x = Moment, y = PSS, fill = PMSScoreNew), position= position_dodge(0.2),outlier.shape= NA, alpha = .5, width = .1, colour = "black")+
geom_point(data = dmean, aes(x = as.numeric(Moment), y = PSS, group = PMSScoreNew, fill = PMSScoreNew), position= position_dodge(0.2), shape = 21, size=4)+
scale_x_discrete(labels=c('1'='control', '2'='premenstrual'))+
#   annotate('text', x=1, y=105, label='*', size=8)+
#   annotate('text', x=2, y=105, label='*', size=8)+
#   geom_segment(aes(x = 0.955, y = 103, xend = 1.055, yend = 103), size= 2)+
#   geom_segment(aes(x = 1.955, y = 103, xend = 2.055, yend = 103), size= 2)+
ggtitle('PSS ~ PMS * TestMoment')
p
ui<- fluidPage( # makes the User Interface
selectInput("formula_choice", label="Choose a Formula:",
choices= c('PSS ~ TestMoment', 'BSRI ~ TestMoment', 'PSS~ PMSScoreNew*TestMoment', 'BSRI ~PMSScoreNew*TestMoment'),
selected='PSS ~ TestMoment'), # puts the choices in the first element which is accessed via input$formula_choice
tabsetPanel(type = "tab",
tabPanel("pirateplot", plotOutput("pirateplot")),
tabPanel("raincloud", plotOutput("raincloud")),
tabPanel("splitviolin", plotOutput("splitviolin")),
tabPanel("overlap", plotOutput("overlap")),
tabPanel("AIC table", tableOutput("table")),
tabPanel("Anova", verbatimTextOutput("Anova")),
tabPanel("emmeans",verbatimTextOutput("emmeans"))
)
)
server <- function (input, output){ #we have to add this to the server
output$pirateplot<- renderPlot({
dpi=600    #pixels per square inch
# jpeg(paste0(plotPrefix, "Figure", "_", plotTitles[i], ".jpeg"), width=8*dpi, height=4*dpi, res=dpi)
par(mfcol = c(1, 1))
pirateplot(
formula= input$formula_choice,
data=data,
theme= 1,
pal= "info",
main= input$formula_choice,
bean.f.o = .6, # Bean fill
point.o = .3,  # Points
inf.f.o = .7,  # Inference fill
inf.b.o = .8,  # Inference border
avg.line.o = 1,  # Average line
bar.f.o = .5, # Bar
inf.f.col = "white",  # Inf fill col
inf.b.col = "black",  # Inf border col
avg.line.col = "black",  # avg line col
bar.f.col = gray(.8),  # bar filling color
point.pch = 21,
point.bg = "white",
point.col = "black",
point.cex = .7,
xlab="",
)
}, height= 600)
#https://wellcomeopenresearch.org/articles/4-63   some info on rainclouds
output$raincloud <- renderPlot({
if ((grepl("PSS", input$formula_choice))){
p1 <- ggplot(data, aes(x = PMSScoreNew, y = PSS, fill=PMSScoreNew))+
geom_flat_violin(position = position_nudge(x = .2, y = 0),adjust =2)+
geom_boxplot(width= .15, outlier.shape = NA)+
geom_point(position=position_jitter(width=.15), size=.25)+
ylab('PSS')+xlab('PMSScoreNew')+coord_flip()+theme_cowplot()+
theme(legend.position="none")+
guides(fill=FALSE)+
ggtitle("distribution PSS in PMS vs no PMS")
p1
}else{
p2 <- ggplot(data, aes(x = PMSScoreNew, y = BSRI, fill=PMSScoreNew))+
geom_flat_violin(position = position_nudge(x = .2, y = 0),adjust =2)+
ylab('BSRI')+xlab('PMSScoreNew')+coord_flip()+theme_cowplot()+
geom_boxplot(width= .15, outlier.shape = NA)+
geom_point(position=position_jitter(width=.15), size=.25)+
theme(legend.position="none")+
guides(fill=FALSE)+
ggtitle("distribution BSRI in PMS vs no PMS")
p2
}
}, height=600)
output$splitviolin <-renderPlot({
if (grepl('PSS', input$formula_choice)){
dmean<-summarySE(data, measurevar="PSS", groupvars=c('PMSScoreNew', 'Moment'))
p<- ggplot(data, aes(x=Moment, y=PSS, fill=PMSScoreNew))+
# geom_split_violin(adjust =1.5, alpha=.5)+
geom_split_violin(adjust =1.5, alpha=.5, colour= NA)+
geom_boxplot(aes(x = Moment, y = PSS, fill = PMSScoreNew), position= position_dodge(0.2),outlier.shape= NA, alpha = .5, width = .1, colour = "black")+
geom_point(data = dmean, aes(x = as.numeric(Moment), y = PSS, group = PMSScoreNew, fill = PMSScoreNew), position= position_dodge(0.2), shape = 21, size=4)+
scale_x_discrete(labels=c('1'='control', '2'='premenstrual'))+
annotate('text', x=1, y=105, label='*', size=8)+
#   annotate('text', x=2, y=105, label='*', size=8)+
#   geom_segment(aes(x = 0.955, y = 103, xend = 1.055, yend = 103), size= 2)+
#   geom_segment(aes(x = 1.955, y = 103, xend = 2.055, yend = 103), size= 2)+
ggtitle('PSS ~ PMS * TestMoment')
p
} else if (grepl('BSRI', input$formula_choice)){
dmean<-summarySE(dataBig2, measurevar="Valence", groupvars=c('PMSScoreNew', 'Moment'))
p<- ggplot(dataBig2, aes(x=Moment, y=Valence, fill=PMSScoreNew))+
geom_split_violin(adjust=1.5,alpha=.5, colour=NA)+
geom_boxplot(aes(x = Moment, y = Valence, fill = PMSScoreNew), position= position_dodge(0.2) ,outlier.shape= NA, alpha = .5, width = .1, colour = "black")+
geom_point(data = dmean, aes(x = as.numeric(Moment), y = Valence, group = PMSScoreNew, fill = PMSScoreNew), position=position_dodge(0.2), shape = 21, size=4)+
scale_x_discrete(labels=c('1'='control', '2'='premenstrual'))+
ggtitle('Valence ~ PMS * TestMoment')
p
}
}, height=600)
# https://www.rpubs.com/jenrichmond/W6LL  here some info on the following plot
output$raincloud2 <- renderPlot({
#function for weighted average
x1 <- c(2, 4, 7)
weighted_mean <- 0
for (i in 1:length(x1)){
weighted_mean <- (x1[i]+ x1[i+1] + x1[i+2])/3
print (weighted_mean)
}
if ((grepl("PSS", input$formula_choice))){
#dataframe for connected rainclouds
dataf<- data
# we create a dataframe with only PMSScoreNew and PSS
require(reshape2)
dataf<- melt(dataf, id=c("TestMoment", "BSRI")) #takes out these 2 variables
head(dataf)
#sort by TestMoment ascending (so moment 2 is last)
dataf <- dataf[order(dataf$TestMoment),]
head(dataf)
tail(dataf)
df <-data_1x1(
array_1= dataf$PSS[1:length(dataf$PSS)/2],
array_2=dataf$PSS[(length(dataf$PSS)/2)+1:length(dataf$PSS)],
jit_distance=0.09,
jit_seed=321)
raincloud_2<-raincloud_1x1_repmes(
data= df,
colors= (c('dodgerblue', 'darkorange')),
fills= (c('dodgerblue', 'darkorange')),
line_color="gray",
line_alpha=.3,
size=1,
alpha= .6,
align_clouds=FALSE
)+
scale_x_continuous (breaks=c(1,2), labels=c("1", "2"), limits=c(0,3))+
xlab("TestMoment")+
ylab("PSS")+
theme_classic()
raincloud_2
}
else if ((grepl("BSRI", input$formula_choice))){
#dataframe for connected rainclouds
dataf<- data
head(dataf)
# we create a dataframe with only PMSScoreNew and PSS
require(reshape2)
dataf<- melt(dataf, id=c("TestMoment", "BSRI")) #takes out these 2 variables
head(dataf)
length(dataf$BSRI) # 9637
#sort by TestMoment ascending (so moment 2 is last)
dataf <- dataf[order(dataf$TestMoment),]
head(dataf)
tail(dataf)
df <-data_1x1(
array_1= dataf$BSRI[dataf$TestMoment==1], #here we put the PPS of the first half, so Testmoment=1
array_2= dataf$BSRI[dataf$TestMoment==2],# here we put second half
jit_distance=0.09,
jit_seed=321)
raincloud_2<-raincloud_1x1_repmes(
data= df,
colors= (c('dodgerblue', 'darkorange')),
fills= (c('dodgerblue', 'darkorange')),
line_color="gray",
line_alpha=.3,
size=1,
alpha= .6,
align_clouds=FALSE
#ort='h'
)+
scale_x_continuous (breaks=c(1,2), labels=c("1", "2"), limits=c(0,3))+
xlab("TestMoment")+
ylab("BSRI")+
theme_classic()
raincloud_2
}
}, height=600)
models <- reactive({ # we need to create this within a reactive context to be able to access the formula_choice
m <- c()
# Formula <- 'DASS_Stress ~ PMSScoreNew + (1|Subject)'
Formula <- paste0(input$formula_choice, '+ (1|Subject)')
tryCatch(
{ d0.1 <- lmer(Formula,data=data); # if this formula works
m <- c(m, d1=d0.1)}, #we add this
error=function(e){})
tryCatch(
{ d0.2 <- glmer(Formula,data=data, family = gaussian(link = "inverse"),glmerControl(optimizer= "bobyqa", optCtrl = list(maxfun = 100000)),nAGQ=nAGQ);
m <- c(m, d1=d0.2)},
error=function(e){})
tryCatch(
{ d0.3 <- glmer(Formula,data=data, family = gaussian(link = "log"),glmerControl(optimizer= "bobyqa", optCtrl = list(maxfun = 100000)),nAGQ=nAGQ);
m <- c(m, d3=d0.3)},
error=function(e){})
tryCatch(
{ d0.4 <- glmer(Formula,data=data, family = Gamma(link = "identity"),glmerControl(optimizer= "bobyqa", optCtrl = list(maxfun = 100000)),nAGQ=nAGQ);
m <- c(m, d4=d0.4)},
error=function(e){})
tryCatch(
{ d0.5 <- glmer(Formula,data=data, family = Gamma(link = "inverse"),glmerControl(optimizer= "bobyqa", optCtrl = list(maxfun = 100000)),nAGQ=nAGQ);
m <- c(m, d5=d0.5) },
error=function(e){})
tryCatch(
{ d0.6 <- glmer(Formula,data=data, family = Gamma(link = "log"),glmerControl(optimizer= "bobyqa", optCtrl = list(maxfun = 100000)),nAGQ=nAGQ);
m <- c(m, d6=d0.6) },
error=function(e){})
tryCatch(
{ d0.7 <- glmer(Formula,data=data, family = inverse.gaussian(link = "identity"),glmerControl(optimizer= "bobyqa", optCtrl = list(maxfun = 100000)),nAGQ=nAGQ);
models <- c(models, d7=d0.7) },
error=function(e){})
tryCatch(
{ d0.8 <- glmer(Formula,data=data, family = inverse.gaussian(link = "inverse"),glmerControl(optimizer= "bobyqa", optCtrl = list(maxfun = 100000)),nAGQ=nAGQ);
m <- c(m, d8=d0.8) },
error=function(e){})
tryCatch(
{ d0.9 <- glmer(Formula,data=data, family = inverse.gaussian(link = "log"),glmerControl(optimizer= "bobyqa", optCtrl = list(maxfun = 100000)),nAGQ=nAGQ);
m <- c(m, d9=d0.9) },
error=function(e){})
m
})
output$table <-renderTable({
modelNames<-c()
tabel<-c()
for (i in 1:length(models())){
modelNames<-c(modelNames, names(models()[i]))
AIC<-AIC(models()[[i]])
tabel <- c (tabel, round(AIC))}
chosenModel = modelNames[which(tabel == min(tabel))]
tabel <- data.frame(Models=c('chosen  Model:', modelNames), AIC= c(chosenModel, tabel))
tabel
})
output$Anova <- renderPrint({
tabel<-c()
for (i in 1:length(models())){
AIC<- AIC(models()[[i]])
tabel <- c(tabel,round(AIC))}
chosenModel<-models()[which(tabel == min(tabel))]
Anova_1 <- Anova(chosenModel[[1]])
cat(sprintf("\nAnova\n"))
Anova_1
})
output$emmeans <- renderPrint({
tabel<-c()
for (i in 1:length(models())){
AIC<- AIC(models()[[i]])
tabel <- c(tabel,round(AIC))}
chosenModel<-models()[which(tabel == min(tabel))]
cat(sprintf("\n formula: %s\n", input$formula_choice))
if ((grepl("PMS", input$formula_choice)==FALSE)){
cat(sprintf("\n~ TestMoment\n"))
Emm <- emmeans(chosenModel[[1]], pairwise ~ TestMoment, adjust ="fdr", type="response")
print(Emm)}
if (grepl("PMS", input$formula_choice)){
cat(sprintf("\n~ PMS*TestMoment\n"))
Emm <- emmeans(chosenModel[[1]], pairwise ~ PMSScoreNew*TestMoment, adjust ="fdr", type="response")
print(Emm)}
})
}
shinyApp(ui=ui, server=server, options=list(height=800))
p<- ggplot(data, aes(x=Moment, y=PSS, fill=PMSScoreNew))+
# geom_split_violin(adjust =1.5, alpha=.5)+
geom_split_violin(adjust =1.5, alpha=.5, colour= NA)+
geom_boxplot(aes(x = Moment, y = PSS, fill = PMSScoreNew), position= position_dodge(0.2),outlier.shape= NA, alpha = .5, width = .1, colour = "black")+
geom_point(data = dmean, aes(x = as.numeric(Moment), y = PSS, group = PMSScoreNew, fill = PMSScoreNew), position= position_dodge(0.2), shape = 21, size=4)+
scale_x_discrete(labels=c('1'='control', '2'='premenstrual'))+
annotate('text', x=1, y=105, label='*', size=8)+
annotate('text', x=2, y=105, label='*', size=8)+
geom_segment(aes(x = 0.955, y = 103, xend = 1.055, yend = 103), size= 2)+
geom_segment(aes(x = 1.955, y = 103, xend = 2.055, yend = 103), size= 2)+
ggtitle('PSS ~ PMS * TestMoment')
p
p<- ggplot(data, aes(x=Moment, y=PSS, fill=PMSScoreNew))+
# geom_split_violin(adjust =1.5, alpha=.5)+
geom_split_violin(adjust =1.5, alpha=.5, colour= NA)+
geom_boxplot(aes(x = Moment, y = PSS, fill = PMSScoreNew), position= position_dodge(0.2),outlier.shape= NA, alpha = .5, width = .1, colour = "black")+
geom_point(data = dmean, aes(x = as.numeric(Moment), y = PSS, group = PMSScoreNew, fill = PMSScoreNew), position= position_dodge(0.2), shape = 21, size=4)+
scale_x_discrete(labels=c('1'='control', '2'='premenstrual'))+
annotate('text', x=1, y=105, label='*', size=8)+
annotate('text', x=2, y=105, label='*', size=8)+
geom_segment(aes(x = 0.955, y = 103, xend = 1.055, yend = 103), size= 2)+
geom_segment(aes(x = 1.955, y = 103, xend = 2.055, yend = 103), size= 2)+
ggtitle('PSS ~ PMS * TestMoment')
p
p<- ggplot(data, aes(x=Moment, y=PSS, fill=PMSScoreNew))+
# geom_split_violin(adjust =1.5, alpha=.5)+
geom_split_violin(adjust =1.5, alpha=.5, colour= NA)+
geom_boxplot(aes(x = Moment, y = PSS, fill = PMSScoreNew), position= position_dodge(0.2),outlier.shape= NA, alpha = .5, width = .1, colour = "black")+
geom_point(data = dmean, aes(x = as.numeric(Moment), y = PSS, group = PMSScoreNew, fill = PMSScoreNew), position= position_dodge(0.2), shape = 21, size=4)+
scale_x_discrete(labels=c('1'='control', '2'='premenstrual'))+
annotate('text', x=1, y=105, label='*', size=8)+
annotate('text', x=2, y=105, label='*', size=8)+
geom_segment(aes(x = 0.955, y = 103, xend = 1.055, yend = 103), size= 2)+
geom_segment(aes(x = 1.955, y = 103, xend = 2.055, yend = 103), size= 2)+
ggtitle('PSS ~ PMS * TestMoment')
p
p<- ggplot(data, aes(x=Moment, y=PSS, fill=PMSScoreNew))+
# geom_split_violin(adjust =1.5, alpha=.5)+
geom_split_violin(adjust =1.5, alpha=.5, colour= NA)+
geom_boxplot(aes(x = Moment, y = PSS, fill = PMSScoreNew), position= position_dodge(0.2),outlier.shape= NA, alpha = .5, width = .1, colour = "black")+
geom_point(data = dmean, aes(x = as.numeric(Moment), y = PSS, group = PMSScoreNew, fill = PMSScoreNew), position= position_dodge(0.2), shape = 21, size=4)+
scale_x_discrete(labels=c('1'='control', '2'='premenstrual'))+
annotate('text', x=1, y=42, label='*', size=8)+
annotate('text', x=2, y=42, label='*', size=8)+
geom_segment(aes(x = 0.955, y = 40, xend = 1.055, yend = 40), size= 2)+
geom_segment(aes(x = 1.955, y = 40, xend = 2.055, yend = 40), size= 2)+
ggtitle('PSS ~ PMS * TestMoment')
p
dmean<-summarySE(data, measurevar="BSRI", groupvars=c('PMSScoreNew', 'Moment'))
p<- ggplot(data, aes(x=Moment, y=BSRI, fill=PMSScoreNew))+
# geom_split_violin(adjust =1.5, alpha=.5)+
geom_split_violin(adjust =1.5, alpha=.5, colour= NA)+
geom_boxplot(aes(x = Moment, y = BSRI, fill = PMSScoreNew), position= position_dodge(0.2),outlier.shape= NA, alpha = .5, width = .1, colour = "black")+
geom_point(data = dmean, aes(x = as.numeric(Moment), y = BSRI, group = PMSScoreNew, fill = PMSScoreNew), position= position_dodge(0.2), shape = 21, size=4)+
scale_x_discrete(labels=c('1'='control', '2'='premenstrual'))+
annotate('text', x=1, y=42, label='*', size=8)+
annotate('text', x=2, y=42, label='*', size=8)+
geom_segment(aes(x = 0.955, y = 40, xend = 1.055, yend = 40), size= 2)+
geom_segment(aes(x = 1.955, y = 40, xend = 2.055, yend = 40), size= 2)+
ggtitle('PSS ~ PMS * TestMoment')
p
p<- ggplot(data, aes(x=Moment, y=BSRI, fill=PMSScoreNew))+
# geom_split_violin(adjust =1.5, alpha=.5)+
geom_split_violin(adjust =1.5, alpha=.5, colour= NA)+
geom_boxplot(aes(x = Moment, y = BSRI, fill = PMSScoreNew), position= position_dodge(0.2),outlier.shape= NA, alpha = .5, width = .1, colour = "black")+
geom_point(data = dmean, aes(x = as.numeric(Moment), y = BSRI, group = PMSScoreNew, fill = PMSScoreNew), position= position_dodge(0.2), shape = 21, size=4)+
scale_x_discrete(labels=c('1'='control', '2'='premenstrual'))+
annotate('text', x=1, y=802, label='*', size=8)+
annotate('text', x=2, y=802, label='*', size=8)+
geom_segment(aes(x = 0.955, y = 800, xend = 1.055, yend = 800), size= 2)+
geom_segment(aes(x = 1.955, y = 800, xend = 2.055, yend = 800), size= 2)+
ggtitle('PSS ~ PMS * TestMoment')
p
p<- ggplot(data, aes(x=Moment, y=BSRI, fill=PMSScoreNew))+
# geom_split_violin(adjust =1.5, alpha=.5)+
geom_split_violin(adjust =1.5, alpha=.5, colour= NA)+
geom_boxplot(aes(x = Moment, y = BSRI, fill = PMSScoreNew), position= position_dodge(0.2),outlier.shape= NA, alpha = .5, width = .1, colour = "black")+
geom_point(data = dmean, aes(x = as.numeric(Moment), y = BSRI, group = PMSScoreNew, fill = PMSScoreNew), position= position_dodge(0.2), shape = 21, size=4)+
scale_x_discrete(labels=c('1'='control', '2'='premenstrual'))+
annotate('text', x=1, y=810, label='*', size=8)+
annotate('text', x=2, y=810, label='*', size=8)+
geom_segment(aes(x = 0.955, y = 805, xend = 1.055, yend = 805), size= 2)+
geom_segment(aes(x = 1.955, y = 805, xend = 2.055, yend = 805), size= 2)+
ggtitle('PSS ~ PMS * TestMoment')
p
dmean<-summarySE(data, measurevar="PSS", groupvars=c('PMSScoreNew', 'Moment'))
p<- ggplot(data, aes(x=Moment, y=PSS, fill=PMSScoreNew))+
# geom_split_violin(adjust =1.5, alpha=.5)+
geom_split_violin(adjust =1.5, alpha=.5, colour= NA)+
geom_boxplot(aes(x = Moment, y = PSS, fill = PMSScoreNew), position= position_dodge(0.2),outlier.shape= NA, alpha = .5, width = .1, colour = "black")+
geom_point(data = dmean, aes(x = as.numeric(Moment), y = PSS, group = PMSScoreNew, fill = PMSScoreNew), position= position_dodge(0.2), shape = 21, size=4)+
scale_x_discrete(labels=c('1'='control', '2'='premenstrual'))+
annotate('text', x=1, y=42, label='*', size=8)+
annotate('text', x=2, y=42, label='*', size=8)+
geom_segment(aes(x = 0.955, y = 40, xend = 1.055, yend = 40), size= 2)+
geom_segment(aes(x = 1.955, y = 40, xend = 2.055, yend = 40), size= 2)+
ggtitle('PSS ~ PMS * TestMoment')
p
list(src=str_glue("Z:/shares/ghep_lab/ImageDatabases/IAPS/{input$stimulus}.jpg"),
filetype="image/jpeg",
width=400,
height=300)
knitr::opts_chunk$set(echo = TRUE)
head(mtcars)
head(mtcars)
c<-head(mtcars)[1]
c
head(mtcars$price)
head(cars93$price)
mtcars$cycl
hist(mtcars$mpg)
x<- input$name$input
z<-mtcars$mpg
z
z<-mtcars$mph
hist(z)
z<-mtcars$mpg
hist(z)
getwd()
#### IMPORT data & INSPECTION #### -------------------------------------------------------------
# work_dir<-"Z:\\shares\\ghepmk_data\\2020_Kappen_PMS\\RMarkdown\\Data\\"
# setwd(work_dir)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
getwd()
#### IMPORT data & INSPECTION #### -------------------------------------------------------------
work_dir<-"Z:\\shares\\ghepmk_data\\2020_Kappen_PMS\\RMarkdown\\Data\\"
setwd(work_dir)
getwd()
#### IMPORT data & INSPECTION #### -------------------------------------------------------------
work_dir<-"Z:\\shares\\ghepmk_data\\2020_Kappen_PMS\\"
setwd(work_dir)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
getwd()
